name: CI Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Run tests with tox
      run: |
        tox -e py${{ matrix.python-version }},coverage,lint

    - name: Run security scan
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true

    - name: Generate test summary
      if: always()
      run: |
        echo "## \U0001F9EA Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Test results
        if [ -f "coverage.xml" ]; then
          COVERAGE=$(python -c "
          import xml.etree.ElementTree as ET
          try:
              tree = ET.parse('coverage.xml')
              root = tree.getroot()
              coverage = root.get('line-rate')
              if coverage:
                  print(f'{float(coverage)*100:.1f}%')
              else:
                  print('N/A')
          except:
              print('N/A')
          ")
          echo "- **\U00002714 Test Coverage**: $COVERAGE" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **\U0000274C Test Coverage**: Report not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Count test files
        TEST_FILES=$(find tests/ -name "test_*.py" | wc -l)
        echo "- **\U0001F4DD Test Files**: $TEST_FILES" >> $GITHUB_STEP_SUMMARY
        
        # Tox environment results
        echo "- **\U0001F433 Tox Environment**: py${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        
        # Check if tox lint passed (simplified check)
        if tox -e lint --notest > /dev/null 2>&1; then
          echo "- **\U00002728 Code Quality**: All linting checks passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **\U000026A0 Code Quality**: Some linting issues found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Security scan results
        if [ -f "bandit-report.json" ]; then
          python scripts/security_summary.py bandit-report.json >> $GITHUB_STEP_SUMMARY
        else
          echo "- **\U0001F512 Security Scan**: No report generated" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Python version info
        echo "- **\U0001F40D Python Version**: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        
        # Job status
        if [ "${{ job.status }}" == "success" ]; then
          echo "- **\U0001F389 Overall Status**: All checks passed!" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **\U000026A0 Overall Status**: Some checks failed" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload reports
      if: always() && matrix.python-version == '3.11'
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: |
          coverage.xml
          htmlcov/
          bandit-report.json
          .tox/*/log/
